
#include <functional>
#include <string>

namespace isl {
inline namespace noexceptions {

class ctx {
  isl_ctx *ptr;
public:
  /* implicit */ ctx(isl_ctx *ctx)
      : ptr(ctx) {}
  isl_ctx *release() {
    auto tmp = ptr;
    ptr = nullptr;
    return tmp;
  }
  isl_ctx *get() {
    return ptr;
  }
};

class error {
public:
  virtual void report() { }
  bool report_bool() { return true; }
};

class error_assume_inbounds {
public:
  void report() {}
  bool report_bool() {}
};

}
} // namespace isl
